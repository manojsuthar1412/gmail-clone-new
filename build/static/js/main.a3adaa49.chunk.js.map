{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","features/mailSlice.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SidebarOption.js","Sidebar.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoUrl","mailSlice","sendMessageIsOpen","selectedMail","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Mail","history","useHistory","push","ArrowBack","MoveToInbox","Error","Delete","Email","WatchLater","CheckCircle","LabelImportant","MoreVert","UnfoldMore","Print","ExitToApp","Subject","Title","Time","Description","Section","Icon","Color","Selected","style","borderBottom","color","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","InboxIcon","PeopleIcon","LocalOfferIcon","to","subject","message","Date","timestamp","seconds","toUTCString","SideBarOption","Number","Sidebar","Button","startIcon","fontSize","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","SendMail","useForm","register","handleSubmit","errors","watch","Close","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","ref","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","err","alert","App","onAuthStateChanged","path","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3adaa49.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: state => {\r\n      state.user = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAYYFRqz0v_Tv_036ubZh0Uc3QEdG510dc\",\r\n    authDomain: \"clone-a09cb.firebaseapp.com\",\r\n    projectId: \"clone-a09cb\",\r\n    storageBucket: \"clone-a09cb.appspot.com\",\r\n    messagingSenderId: \"580652336457\",\r\n    appId: \"1:580652336457:web:b4b764b33eb6a1eae10698\",\r\n    measurementId: \"G-M7CX43LCVE\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport { db, auth, provider };","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Avatar, Icon, IconButton } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout, selectUser } from \"./features/userSlice\";\r\nimport { auth } from \"./firebase\";\r\n\r\nexport default function Header() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const logOut = () => {\r\n    auth.signOut().then(() => {\r\n      dispatch(logout());\r\n    })\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header_left\">\r\n        <IconButton>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <img\r\n          src=\"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"header_middle\">\r\n        <IconButton>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <input placeholder=\"Search mail\" type=\"text\" />\r\n        <IconButton>\r\n          <ArrowDropDownIcon className=\"header_inputCaret\" />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"header_right\">\r\n        <IconButton>\r\n          <SettingsIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <AppsIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <NotificationsIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <Avatar  onClick={logOut} src={user?.photoUrl} />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const mailSlice = createSlice({\r\n  name: 'mail',\r\n  initialState: {\r\n    sendMessageIsOpen: false,\r\n    selectedMail: null\r\n  },\r\n  reducers: {\r\n    selectMail: (state, action) => {\r\n      state.selectedMail = action.payload;\r\n    },\r\n    openSendMessage: state => {\r\n      state.sendMessageIsOpen = true;\r\n    },\r\n    closeSendMessage: state => {\r\n      state.sendMessageIsOpen = false;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {  selectMail, openSendMessage, closeSendMessage } = mailSlice.actions;\r\n\r\nexport const selectOpenMail = state => state.mail.selectedMail;\r\nexport const selectSendMessageIsOpen = state => state.mail.sendMessageIsOpen;\r\n\r\nexport default mailSlice.reducer;\r\n","import { IconButton } from '@material-ui/core';\r\nimport { ArrowBack, CheckCircle, Delete, Email, Error, MoreVert, MoveToInbox, WatchLater, LabelImportant, UnfoldMore, Print, ExitToApp } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectOpenMail } from './features/mailSlice';\r\nimport \"./Mail.css\";\r\n\r\n\r\nfunction Mail() {\r\n    const history = useHistory();\r\n    const selectedMail = useSelector(selectOpenMail);\r\n \r\n\r\n    return (\r\n        <div className=\"mail\">\r\n            <div className=\"mail_tools\">\r\n                <div className=\"mail_toolsLeft\">\r\n                    <IconButton onClick={() => history.push(\"/\")}>\r\n                        <ArrowBack />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoveToInbox />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Error />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Delete />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Email />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <WatchLater />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <CheckCircle />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <LabelImportant />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n                <div className=\"mail_toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMore />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Print />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExitToApp />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mail_body\">\r\n                <div className=\"mail_bodyHeader\">\r\n                    <h2>{selectedMail?.Subject}</h2>\r\n                    <LabelImportant className=\"mail_important\" />\r\n                    <p>{selectedMail?.Title}</p>\r\n                    <p className=\"mail_time\">{selectedMail?.Time}</p>\r\n                </div>\r\n\r\n                <div className=\"mail_message\">\r\n                   <p>{selectedMail?.Description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail\r\n","import React from 'react'\r\nimport './Section.css'\r\n\r\nfunction Section({Icon, Title, Color, Selected}) {\r\n    return (\r\n        <div className={`section ${Selected && \"section--selected\"}`}\r\n        style={{\r\n            borderBottom: `3px solid ${Color}`,\r\n            color: `${Selected && Color}`\r\n        }}\r\n        >\r\n            <Icon />\r\n            <h4>{Title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","import { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./EmailRow.css\";\r\n\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport LabelImportantOutlinedIcon from \"@material-ui/icons/LabelImportantOutlined\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectMail } from \"./features/mailSlice\";\r\n\r\nexport default function EmailRow({ id, Title, Subject, Description, Time }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const openMail = () => {\r\n    dispatch(\r\n      selectMail({\r\n        id,\r\n        Title,\r\n        Subject,\r\n        Description,\r\n        Time,\r\n      })\r\n    );\r\n    history.push(\"/mail\");\r\n  };\r\n\r\n  return (\r\n    <div onClick={openMail} className=\"emailRow\">\r\n      <div className=\"emailRow_options\">\r\n        <Checkbox />\r\n\r\n        <IconButton>\r\n          <StarBorderOutlinedIcon />\r\n        </IconButton>\r\n\r\n        <IconButton>\r\n          <LabelImportantOutlinedIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <h3 className=\"emailRow_title\">{Title}</h3>\r\n\r\n      <div className=\"emailRow_message\">\r\n        <h4>\r\n          {Subject} <span className=\"emailRow_description\">-{Description}</span>\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"emailRow_time\">{Time}</div>\r\n    </div>\r\n  );\r\n}\r\n","import { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./EmailList.css\";\r\n\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport Section from \"./Section\";\r\nimport EmailRow from \"./EmailRow\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction EmailList() {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"emails\")\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapshot => \r\n                setEmails(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(), \r\n                    })\r\n                ))\r\n        )\r\n    }, []);\r\n    // console.log(emails.map(email => new Date(email.data.timestamp?.seconds * 1000).toUTCString()))\r\n\r\n    return (\r\n        <div className=\"emailList\">\r\n            <div className=\"emailList_settings\">\r\n                <div className=\"emailList_settingsLeft\">\r\n                    <Checkbox />\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className=\"emailList_settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"emailList_sections\">\r\n                <Section Icon={InboxIcon} Title='Primary' Color='red' Selected />\r\n\r\n                <Section Icon={PeopleIcon} Title='Social' Color='#1a73e8' />\r\n                \r\n                <Section Icon={LocalOfferIcon} Title='Promotions' Color='green' />\r\n            </div>\r\n            \r\n            <div className=\"emailList_list\">\r\n            \r\n                {emails.map( ({id, data}) => (\r\n                        <EmailRow \r\n                            id={id}\r\n                            key={id}\r\n                            Title={data.to}\r\n                            Subject={data.subject}\r\n                            Description={data.message}\r\n                            Time={new Date(data.timestamp?.seconds * 1000).toUTCString()}\r\n                        />\r\n                ))}\r\n                \r\n                <EmailRow Title=\"Twitch\" \r\n                Subject=\"Hey Fellow coder\" \r\n                Description=\"This is a test\" \r\n                // Time=\"10pm\" \r\n                />\r\n            \r\n                <EmailRow Title=\"Twitch\" \r\n                Subject=\"Hey Fellow coder\" \r\n                Description=\"This is a test, you can play with this as much as you want\" \r\n                Time=\"10pm\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailList;\r\n","import React from 'react'\r\nimport \"./SideBarOption.css\";\r\n\r\nfunction SideBarOption({Icon, Title, Number, Selected}) {\r\n    return (\r\n        <div className={`sidebarOption ${Selected && \"sidebarOption--active\"}`}>\r\n            <Icon />\r\n            <h3>{Title}</h3>\r\n            <p>{Number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarOption;\r\n","import { Button, IconButton } from '@material-ui/core';\r\nimport React from 'react'\r\nimport './Sidebar.css';\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport InboxIcon from \"@material-ui/icons/Inbox\"\r\nimport StarIcon from \"@material-ui/icons/Star\"\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\"\r\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\"\r\nimport NearMeIcon from \"@material-ui/icons/NearMe\"\r\nimport NoteIcon from \"@material-ui/icons/Note\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport PersonIcon from \"@material-ui/icons/Person\"\r\nimport DuoIcon from \"@material-ui/icons/Duo\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\n\r\nimport SideBarOption from \"./SidebarOption\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { openSendMessage } from './features/mailSlice';\r\n\r\nexport default function Sidebar() {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Button \r\n            startIcon={<AddIcon fontSize=\"large\" />}\r\n            className=\"sidebar_compose\"\r\n            onClick={() => dispatch(openSendMessage())}\r\n            >\r\n                Compose\r\n            </Button>\r\n\r\n            <SideBarOption Icon={InboxIcon} Title=\"Inbox\" Number={54} Selected={true} />\r\n\r\n            <SideBarOption Icon={StarIcon} Title=\"Starred\" Number={54} />\r\n            <SideBarOption Icon={AccessTimeIcon} Title=\"Snoozed\" Number={54} />\r\n            <SideBarOption Icon={LabelImportantIcon} Title=\"Important\" Number={54} />\r\n            <SideBarOption Icon={NearMeIcon} Title=\"Sent\" Number={54} />\r\n            <SideBarOption Icon={NoteIcon} Title=\"Draft\" Number={54} />\r\n            <SideBarOption Icon={ExpandMoreIcon} Title=\"More\" Number={54} />\r\n\r\n            <div className=\"sidebar_footer\">\r\n                <div className=\"sidebar_footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon />    \r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon />\r\n                    </IconButton>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Button } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport \"./SendMail.css\"\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice';\r\nimport { db } from './firebase';\r\nimport firebase from \"firebase\";\r\n\r\nexport default function SendMail() {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        db.collection('emails').add({\r\n            to: formData.to,\r\n            subject: formData.subject,\r\n            message: formData.message,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n\r\n        dispatch(closeSendMessage());\r\n    }\r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail_header\">\r\n                <h3>New Message</h3>\r\n                <Close \r\n                onClick={() => dispatch(closeSendMessage())}\r\n                className=\"sendMail_close\" />\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input \r\n                    name=\"to\"\r\n                    placeholder=\"To\"\r\n                    type=\"email\"\r\n                    ref={register({required: true})} \r\n                />\r\n                {errors.to && <p className=\"sendMail_error\">\"Email is required\"</p>}\r\n\r\n                <input \r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    type=\"text\"\r\n                    ref={register({required: true})}\r\n                />\r\n                {errors.subject && <p className=\"sendMail_error\">\"Subject is required\"</p>}\r\n\r\n                <input \r\n                    name=\"message\"\r\n                    placeholder=\"Message...\"\r\n                    type=\"text\"\r\n                    className=\"sendMail_message\"\r\n                    ref={register({required: true})}\r\n                />\r\n                {errors.message && <p className=\"sendMail_error\">\"Message is required\"</p>}\r\n\r\n                <div className=\"sendMail_options\">\r\n                    <Button\r\n                        className=\"sendMail_send\"         \r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >Send</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from './features/userSlice'\r\nimport { auth, provider } from './firebase'\r\nimport \"./Login.css\"\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch();\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then(({user}) => {\r\n            dispatch(\r\n                login({\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    photoUrl: user.photoURL\r\n                })\r\n            )\r\n        })\r\n        .catch(err => alert(err.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\" alt=\"\"/>\r\n\r\n                <Button \r\n                onClick={signIn}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                >Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Header from './Header';\r\nimport Mail from './Mail';\r\nimport EmailList from './EmailList';\r\nimport Sidebar from './Sidebar';\r\nimport SendMail from './SendMail';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSendMessageIsOpen } from './features/mailSlice';\r\nimport { login, selectUser } from './features/userSlice';\r\nimport Login from './Login';\r\nimport { auth } from './firebase';\r\n\r\nfunction App() {\r\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen)\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        dispatch(\r\n          login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoUrl: user.photoURL\r\n          })\r\n        )\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n       ) : (\r\n        <div className=\"app\">\r\n        <Header />\r\n        <div className=\"app_body\">\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route path=\"/mail\">\r\n              <Mail />\r\n            </Route>\r\n            \r\n            <Route path=\"/\">\r\n              <EmailList />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n\r\n        {sendMessageIsOpen && <SendMail />}\r\n      </div>\r\n      )}\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}